public class MazeRecursion {
    public static void mazeRecursion() {
        // First create a 2 dimensions array to mimic a maze map
        int[][] map = new int[8][7];
        int[][] map2 = new int[8][7];
        // We use 1 to indicate wall
        // Set the ceiling and floor to 1
        for (int i = 0; i < 7; i++) {
            map[0][i] = 1;
            map[7][i] = 1;
        }
        // Then we set the left and right wall to 1
        for (int i = 0; i < 8; i++) {
            map[i][0] = 1;
            map[i][6] = 1;
        }
        // Now we have created a maze with its wall initialized
        // Here we set the obstacle
        map[3][1] = 1;
        map[3][2] = 1;
        // Print the current map
        System.out.println("The condition of the map: ");
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j <7; j++) {
                System.out.print(map[i][j] + " ");
            }
            System.out.println();
        }
        // clone another map for setWay2 method
        for (int i = 0; i < map.length; i++) {
            System.arraycopy(map[i], 0, map2[i], 0, map[i].length);
        }
        // By using recursive backtracking to let your ball(target) find its way in the
        // maze
        // The first parameter is the map
        // Second parameter is x coordinate of your target
        // Third parameter is the y coordinate of your target
        setWay(map, 1, 1);
